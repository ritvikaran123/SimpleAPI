"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runL1ZipUtilityTests = void 0;
const path = require("path");
const assert = require("assert");
const ziputility_1 = require("../ziputility");
function runL1ZipUtilityTests() {
    it("Should skip ZIP entries validation", () => __awaiter(this, void 0, void 0, function* () {
        const archive = path.join(__dirname, 'L1ZipUtility', 'potentially_malicious.zip');
        const exists = yield ziputility_1.checkIfFilesExistsInZip(archive, ['index.html']);
        assert.strictEqual(exists, true);
    }));
}
exports.runL1ZipUtilityTests = runL1ZipUtilityTests;
