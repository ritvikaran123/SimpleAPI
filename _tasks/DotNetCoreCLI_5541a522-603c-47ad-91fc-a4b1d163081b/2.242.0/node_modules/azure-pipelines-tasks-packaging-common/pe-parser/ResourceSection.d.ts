/// <reference types="node" />
import IReadableFile from "./IReadableFile";
import { SectionTableEntry } from "./SectionTable";
export interface ResourceData {
    dataRva: number;
    size: number;
    codepage: number;
}
export interface ResourceDirectoryEntry {
    id: number | string;
    data: ResourceData | ResourceDirectory;
}
export declare class ResourceDirectory {
    entries: ResourceDirectoryEntry[];
    getDataEntry(id: string | number): ResourceData;
    getSubdirectory(id: string | number): ResourceDirectory;
}
export declare class ResourceSection {
    root: ResourceDirectory;
    private file;
    private sectionTableEntry;
    constructor(root: ResourceDirectory, file: IReadableFile, sectionTableEntry: SectionTableEntry);
    static load(file: IReadableFile, resourceSectionTableEntry: SectionTableEntry): Promise<ResourceSection>;
    getResource(...path: (number | string)[]): ResourceData;
    getResourceBufferAsync(...path: (number | string)[]): Promise<Buffer>;
}
export default ResourceSection;
