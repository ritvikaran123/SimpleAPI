"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalAuthType = exports.ApiKeyExternalAuthInfo = exports.UsernamePasswordExternalAuthInfo = exports.TokenExternalAuthInfo = exports.ExternalAuthInfo = exports.InternalAuthInfo = exports.NuGetExtendedAuthInfo = exports.NuGetAuthInfo = exports.NuGetOrgV3PackageSource = exports.NuGetOrgV2PackageSource = void 0;
const NUGET_ORG_V2_URL = "https://www.nuget.org/api/v2/";
const NUGET_ORG_V3_URL = "https://api.nuget.org/v3/index.json";
exports.NuGetOrgV2PackageSource = {
    feedName: "NuGetOrg",
    feedUri: NUGET_ORG_V2_URL,
    isInternal: false
};
exports.NuGetOrgV3PackageSource = {
    feedName: "NuGetOrg",
    feedUri: NUGET_ORG_V3_URL,
    isInternal: false
};
class NuGetAuthInfo {
    constructor(uriPrefixes, accessToken) {
        this.uriPrefixes = uriPrefixes;
        this.accessToken = accessToken;
    }
}
exports.NuGetAuthInfo = NuGetAuthInfo;
class NuGetExtendedAuthInfo {
    constructor(internalAuthInfo, externalAuthInfo) {
        this.internalAuthInfo = internalAuthInfo;
        this.externalAuthInfo = externalAuthInfo;
    }
}
exports.NuGetExtendedAuthInfo = NuGetExtendedAuthInfo;
class InternalAuthInfo {
    constructor(uriPrefixes, accessToken, useCredProvider, useCredConfig) {
        this.uriPrefixes = uriPrefixes;
        this.accessToken = accessToken;
        this.useCredProvider = useCredProvider;
        this.useCredConfig = useCredConfig;
    }
}
exports.InternalAuthInfo = InternalAuthInfo;
class ExternalAuthInfo {
    constructor(packageSource, authType) {
        this.packageSource = packageSource;
        this.authType = authType;
    }
}
exports.ExternalAuthInfo = ExternalAuthInfo;
class TokenExternalAuthInfo extends ExternalAuthInfo {
    constructor(packageSource, token) {
        super(packageSource, ExternalAuthType.Token);
        this.packageSource = packageSource;
        this.token = token;
    }
}
exports.TokenExternalAuthInfo = TokenExternalAuthInfo;
class UsernamePasswordExternalAuthInfo extends ExternalAuthInfo {
    constructor(packageSource, username, password) {
        super(packageSource, ExternalAuthType.UsernamePassword);
        this.packageSource = packageSource;
        this.username = username;
        this.password = password;
    }
}
exports.UsernamePasswordExternalAuthInfo = UsernamePasswordExternalAuthInfo;
class ApiKeyExternalAuthInfo extends ExternalAuthInfo {
    constructor(packageSource, apiKey) {
        super(packageSource, ExternalAuthType.ApiKey);
        this.packageSource = packageSource;
        this.apiKey = apiKey;
    }
}
exports.ApiKeyExternalAuthInfo = ApiKeyExternalAuthInfo;
var ExternalAuthType;
(function (ExternalAuthType) {
    ExternalAuthType[ExternalAuthType["Token"] = 0] = "Token";
    ExternalAuthType[ExternalAuthType["UsernamePassword"] = 1] = "UsernamePassword";
    ExternalAuthType[ExternalAuthType["ApiKey"] = 2] = "ApiKey";
})(ExternalAuthType = exports.ExternalAuthType || (exports.ExternalAuthType = {}));
